<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd" >

<sqlMap namespace="Analyze">
	<typeAlias alias="KeyCount" type="sla.model.KeyCount"/>
	<typeAlias alias="ShortUserInfoWithCount" type="sla.model.ShortUserInfoWithCount"/>
	<select id="getCountRecordByUser" parameterClass="Map" resultClass="ShortUserInfoWithCount">
	SELECT u.id,u.social_name,u.social_image_url  ,c.cnt AS cnt,short_url FROM (SELECT user_id, SUM(cnt) 
	cnt,short_url FROM(SELECT a.*, (SELECT COALESCE(SUM(visit_count),0)
 	FROM visit_count WHERE encoded_key_id=a.id  AND (time_period BETWEEN #startPeriod# AND #endPeriod#)) 
 	AS cnt FROM short_url a WHERE url=#url# ORDER BY cnt DESC ) count_by_user GROUP BY user_id ORDER BY cnt DESC) c
 	,user_info u WHERE c.user_id=u.id ORDER BY c.cnt DESC
	</select>
	<select id="getUserGenderDistribution" parameterClass="Map" resultClass="KeyCount">
	SELECT key_id ,key_name,COALESCE(cnt,0) AS cnt FROM (SELECT 1 AS key_id,#key0# AS key_name FROM DUAL UNION SELECT 2 AS key_id,#key1# AS key_name FROM DUAL UNION SELECT 3 AS key_id,#key2# AS key_name FROM DUAL) a
 	LEFT JOIN (SELECT social_gender AS key_name,COUNT(*) AS cnt FROM user_info WHERE id IN 
 	(SELECT user_id FROM short_url WHERE 1=1 
 	<isNotNull prepend="AND " property="url">url=#url# </isNotNull>
	<isNotNull prepend="AND " property="encodedKeyId">id=#encodedKeyId# </isNotNull>
 	 ) GROUP BY social_gender) b USING(key_name)
	</select>
	<select id="getOperationSystemDistribution" parameterClass="Map" resultClass="KeyCount">
	SELECT operation_system as key_name,SUM(use_count) as cnt FROM user_agent_info a, short_url b
	WHERE a.encoded_key_id=b.id
	<isNotNull prepend="AND " property="url">b.url=#url# </isNotNull>
	<isNotNull prepend="AND " property="encodedKeyId">b.id=#encodedKeyId# </isNotNull>
	GROUP BY operation_system
	ORDER BY cnt DESC
	</select>
	<select id="getBrowserDistribution" parameterClass="Map" resultClass="KeyCount">
	SELECT browser as key_name,SUM(use_count) as cnt FROM user_agent_info a, short_url b
	WHERE a.encoded_key_id=b.id
	<isNotNull prepend="AND " property="url">b.url=#url# </isNotNull>
	<isNotNull prepend="AND " property="encodedKeyId">b.id=#encodedKeyId# </isNotNull>
	GROUP BY browser
	ORDER BY cnt DESC
	</select>
	<select id="getCountSumByHour" parameterClass="Map" resultClass="KeyCount">
	SELECT time_period AS key_name,SUM(visit_count) AS cnt FROM visit_count a,short_url b
	WHERE time_period  BETWEEN #startPeriod# AND #endPeriod#
	AND a.encoded_key_id=b.id
	<isNotNull prepend="AND " property="url">b.url=#url# </isNotNull>
	<isNotNull prepend="AND " property="encodedKeyId">b.id=#encodedKeyId# </isNotNull>
	GROUP BY time_period
	</select>
	<select id="getCountSumByDay" parameterClass="Map" resultClass="KeyCount">
	SELECT FLOOR(time_period/100) AS key_name,SUM(visit_count) AS cnt FROM visit_count a,short_url b
	WHERE FLOOR(time_period/100)  BETWEEN #startPeriod# AND #endPeriod#
	AND a.encoded_key_id=b.id
	<isNotNull prepend="AND " property="url">b.url=#url# </isNotNull>
	<isNotNull prepend="AND " property="encodedKeyId">b.id=#encodedKeyId# </isNotNull>
	GROUP BY FLOOR(time_period/100)
	</select>
	<select id="getCountSumByMonth" parameterClass="Map" resultClass="KeyCount">
	SELECT FLOOR(time_period/10000) AS key_name,SUM(visit_count) AS cnt FROM visit_count a,short_url b
	WHERE FLOOR(time_period/10000)  BETWEEN #startPeriod# AND #endPeriod#
	AND a.encoded_key_id=b.id
	<isNotNull prepend="AND " property="url">b.url=#url# </isNotNull>
	<isNotNull prepend="AND " property="encodedKeyId">b.id=#encodedKeyId# </isNotNull>
	GROUP BY FLOOR(time_period/10000)
	</select>
	<select id="getBeforeCountSum" parameterClass="Map" resultClass="Integer">
	SELECT COALESCE(SUM(visit_count),0) FROM visit_count a, short_url b
	WHERE a.encoded_key_id=b.id
	<isNotNull prepend="AND " property="url">b.url=#url# </isNotNull>
	<isNotNull prepend="AND " property="encodedKeyId">b.id=#encodedKeyId# </isNotNull>
	AND time_period &lt; #timePeriod#
	</select>
	<select id="getShareRank" parameterClass="Map" resultClass="Integer">
	SELECT rownum AS rank FROM (SELECT @RNUM := @RNUM + 1 AS order_num,a.* FROM (SELECT * FROM (SELECT @RNUM := @RNUM + 1 AS ROWNUM
	,url,u.id FROM (SELECT * FROM short_url WHERE url=#url# ORDER BY id) s,( SELECT @RNUM := 0 ) R,user_info u
	WHERE s.user_id=u.id ) a WHERE id=#userId#) a,( SELECT @RNUM := 0 ) R) b WHERE order_num=1
	</select>
	<select id="getFirstShortUrlByFullUrl" parameterClass="Map" resultClass="String">
	SELECT short_url FROM (
	SELECT @RNUM := @RNUM + 1 AS rownum,o.* FROM short_url o,( SELECT @RNUM := 0 ) R WHERE o.url=#fullUrl#) a
	WHERE ROWNUM=1
	</select>
</sqlMap>